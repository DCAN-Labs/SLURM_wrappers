#!/bin/bash

subject_id=SUBJECTID
ses_id=SESID
data_dir=DATADIR
data_bucket=BUCKET
run_dir=RUNDIR
cpu_usage=8
singularity=$(which singularity)

# pull down needed data and files from BIDS bucket
if [ ! -d ${data_dir}/sub-${subject_id}/ses-${ses_id} ]; then
	mkdir -p ${data_dir}/sub-${subject_id}
	s3cmd get ${data_bucket}/sub-${subject_id}/ses-${ses_id} ${data_dir}/sub-${subject_id} --recursive -v
fi

if [ ! -e ${data_dir}/dataset_description.json ]; then
	cp ${run_dir}/dataset_description.json ${data_dir}
fi

if [ -d ${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3 ]; then
    rm -rf ${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3
else
    mkdir -p ${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3
fi

if [ -d ${data_dir}/processed/abcd-hcp-pipeline-v0.1.3 ]; then
    rm -rf ${data_dir}/processed/abcd-hcp-pipeline-v0.1.3
else
    mkdir -p ${data_dir}/processed/abcd-hcp-pipeline-v0.1.3
fi

# Run abcd-hcp-pipeline
env -i ${singularity} run --cleanenv --no-home \
-B ${data_dir}:/bids_dir \
-B ${data_dir}/processed/abcd-hcp-pipeline-v0.1.3:/output_dir \
-B ${run_dir}/license.txt:/opt/freesurfer/license.txt \
-B ${run_dir}/ABCD_BIDS_cleaning.json:/ABCD_BIDS_cleaning.json \
/home/rando149/shared/code/internal/singularity_images/abcd-hcp-pipeline_v0.1.3.sif \
/bids_dir /output_dir \
--freesurfer-license /opt/freesurfer/license.txt \
--participant-label ${subject_id} \
--custom-clean /ABCD_BIDS_cleaning.json \
--ncpus ${cpu_usage}

# Run file-mapper
/home/faird/shared/code/internal/utilities/file-mapper/file_mapper_script.py /home/rando149/shared/projects/ABCC_year1_v013_processing/slurm_abcd-hcp-pipeline_rerun/updated-filemapper_abcd-hcp-pipeline-v0.1.3.json -a copy -sp  ${data_dir}  -dp ${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3/ -vb -o -t SUBJECT=${subject_id},SESSION=${ses_id},PIPELINE=abcd-hcp-pipeline-v0.1.3

# DEAP derivative generator
anat_path=${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/anat
matlab_compiler=/home/feczk001/shared/code/external/utilities/MATLAB_MCR/v91/
cifti_conn_wrapper=/home/faird/shared/code/internal/utilities/cifti_connectivity/cifti_conn_wrapper.py
wb_command=/home/feczk001/shared/code/external/utilities/workbench/1.4.2/workbench/bin_rh_linux64/wb_command
func_path=${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/func
labelfile=/home/feczk001/shared/ROI_sets/Surface_schemes/Human/Gordon/fsLR/Gordon.32k_fs_LR.dlabel.nii

#AREA
#pushd ${anat_path}

for file in ${anat_path}/*MNI*fsLR32k_midthickness.surf.gii; do 
  extension='.surf.gii'
  fileroot=`echo ${file%$extension*}`
  ${wb_command} -surface-vertex-areas ${file} ${fileroot}-vertexarea.func.gii
done


#gordon pconn
#pushd ${func_path}
dtseries_filename=$( ls ${func_path}/*task-rest*filtered*dtseries.nii )
ptseries_filename=$( ls ${func_path}/*task-rest*Gordon*ptseries.nii )
motion_filename=$( ls ${func_path}/*task-rest*filtered_motion*.mat )

#grabbing the TR to ensure that its accurate
TR=`${wb_command} -file-information ${dtseries_filename} | grep 'Map Interval Step' | awk '{print $4}'`
echo $TR

${cifti_conn_wrapper} -mre ${matlab_compiler} -wb ${wb_command} -outliers --dtseries ${dtseries_filename} --motion ${motion_filename} -min 10 -fd 0.2 ${ptseries_filename} ${TR} ${func_path}/ matrix

${cifti_conn_wrapper} -mre ${matlab_compiler} -wb ${wb_command} -outliers --dtseries ${dtseries_filename} --motion ${motion_filename} -min 5 -fd 0.2 ${ptseries_filename} ${TR} ${func_path}/ matrix


#pushd ${anat_path}
for file in ${anat_path}/*.dscalar.nii; do 
  extension='.dscalar.nii'
  fileroot=`echo ${file%$extension*}`
   ${wb_command} -cifti-parcellate ${file} ${labelfile} COLUMN ${fileroot}.pscalar.nii
   
done


# Syncing derivative files and outputs to the bucket
s3cmd sync -F --recursive -v ${data_dir}/derivatives/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/  ${data_bucket}/derivatives/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/
s3cmd sync -F --recursive -v ${data_dir}/processed/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/  ${data_bucket}/processed/abcd-hcp-pipeline-v0.1.3/sub-${subject_id}/ses-${ses_id}/
